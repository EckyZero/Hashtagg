// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using GalaSoft.MvvmLight.Helpers;
using System.ComponentModel;

namespace iOS.Phone
{
	public partial class MenuController : UIViewController
	{
		#region Variables

		private PSObservableTableController _tableController;

		#endregion

		#region Properties

		public MenuViewModel ViewModel { get; set; }

		#endregion

		#region Methods

		public MenuController (IntPtr handle) : base (handle)
		{
			if(ViewModel == null) {
				ViewModel = new MenuViewModel (new HomeViewModel());
			}
		}

		public override async void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			await ViewModel.DidLoad ();

			InitUI ();
			InitBindings ();
		}

		public override async void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear (animated);

			await ViewModel.DidAppear();
		}

		private void InitUI ()
		{
			SubtitleLabel.Alpha = ViewModel.ShowSubtitle ? 1 : 0;
			TitleLabel.Text = ViewModel.Title;

			PrimaryButton.Layer.CornerRadius = 6;
			PrimaryButton.Layer.BorderColor = PrimaryButton.TitleLabel.TextColor.CGColor;
			PrimaryButton.Layer.BorderWidth = 1;
		}

		private void InitBindings ()
		{
			ViewModel.PropertyChanged += (object sender, PropertyChangedEventArgs e) => 
			{
				if(e.PropertyName.Equals("PrimaryButtonText")) 
				{
					PrimaryButton.SetTitle(ViewModel.PrimaryButtonText, UIControlState.Normal);
				}
				else if (e.PropertyName.Equals("ShowSubtitle")) 
				{
					UIView.Animate(0.5, () => {
						SubtitleLabel.Alpha = ViewModel.ShowSubtitle ? 1 : 0;
					});
				}
				else if (e.PropertyName.Equals("Title")) 
				{
                    if(ViewModel.ShowTitleLogo)
                    {
                        UIView.Animate(
                            duration: 0.5f,
                            animation: () => {
                                TitleLabel.Alpha = 0;
                                TitleImageView.Alpha = 1;
                        });
                    }
                    else
                    {
                        UIView.Animate(
                            duration: 0.5f,
                            animation: () => {
                                TitleLabel.Alpha = 1;
                                TitleImageView.Alpha = 0;
                        });
                    }
                    TitleLabel.Text = ViewModel.Title;
                    TitleImageView.Hidden = !ViewModel.ShowTitleLogo;
			    }
			};

			PrimaryButton.SetCommand ("TouchUpInside", ViewModel.PrimaryCommand);
		}

		public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
		{
			base.PrepareForSegue (segue, sender);

			if(segue.DestinationViewController.GetType() == typeof(PSObservableTableController)) {

				_tableController = segue.DestinationViewController as PSObservableTableController;

				_tableController.Collection = ViewModel.ItemViewModels;
				_tableController.SetEstimatedHeight (40);

				_tableController.View.Alpha = ViewModel.ItemViewModels.Count == 0 ? 0 : 1;
				_tableController.AddAnimation = UITableViewRowAnimation.Left;
				_tableController.DeleteAnimation = UITableViewRowAnimation.Left;
			}
		}

		#endregion
	}
}
