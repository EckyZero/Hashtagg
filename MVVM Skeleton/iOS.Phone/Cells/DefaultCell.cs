// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using CoreGraphics;
using SDWebImage;

namespace iOS.Phone
{
	public partial class DefaultCell : BaseCell
	{
		#region Variables

		private BaseContentCardViewModel _viewModel;
		private nfloat _photoImageViewDefaultHeightConstraint = 174;

		#endregion

		#region Methods

		public DefaultCell (IntPtr handle) : base (handle)
		{
		}

		public override void AwakeFromNib ()
		{
			base.AwakeFromNib ();

			ContainerView.Layer.ShadowColor = UIColor.Black.CGColor;
			ContainerView.Layer.ShadowOpacity = 0.15f;
			ContainerView.Layer.ShadowOffset = new CGSize (0, 1);

			UserImageView.Layer.CornerRadius = UserImageView.Frame.Height / 2;
			BodyTextView.TextContainer.LineFragmentPadding = 0;
			BodyTextView.TextContainerInset = UIEdgeInsets.Zero;
//			BodyTextView.TextContainer.HeightTracksTextView = true;

			_photoImageViewDefaultHeightConstraint = PhotoImageViewHeightConstraint.Constant;

			LikeButton.TouchUpInside += LikeButton_TouchUpInside;
			ShareButton.TouchUpInside += ShareButton_TouchUpInside;
			CommentButton.TouchUpInside += CommentButton_TouchUpInside;
		}

		protected override void ConfigureSubviews (IListItem item)
		{
			_viewModel = item as BaseContentCardViewModel;

			// Adjust constraints as needed
			PhotoImageViewHeightConstraint.Constant = _viewModel.ShowImage ? _photoImageViewDefaultHeightConstraint : 0;

			// Map values to UI elements
			BodyTextView.Text = null;
			BodyTextView.Text = _viewModel.Text;
			BodyTextViewHeightConstraint.Constant = BodyTextView.SizeThatFits(new CGSize(BodyTextView.Frame.Width, nfloat.MaxValue)).Height;
			TimeLabel.Text = _viewModel.DisplayDateTime;
			LikeButton.SetTitle (_viewModel.LikeButtonText, UIControlState.Normal);
			CommentButton.SetTitle (_viewModel.CommentButtonText, UIControlState.Normal);
			ShareButton.SetTitle (_viewModel.ShareButtonText, UIControlState.Normal);
			NameLabel.SetHighlightText (_viewModel.UserName, _viewModel.UserName.IndexOf ("@"), UIColor.LightGray);

			if(_viewModel.ShowImage) {
				ActivityIndicator.StartAnimating ();
			} else {
				ActivityIndicator.StopAnimating ();
			}

			SocialTypeImageView.Image = UIImage.FromBundle (_viewModel.SocialMediaImage);
			UserImageView.SetImage (
				url: new NSUrl (_viewModel.UserImageUrl), 
				placeholder: UIImage.FromBundle (_viewModel.UserImagePlaceholder)
			);

			if (_viewModel.ShowImage) {
				PhotoImageView.SetImage (
					url: new NSUrl (_viewModel.ImageUrl), 
					completionHandler: ((UIImage image, NSError error, SDImageCacheType cacheType, NSUrl imageUrl) => {
						ActivityIndicator.Hidden = true;
					})
				);	
			} else {
				PhotoImageView.Image = null;
			}
				
		}

		void CommentButton_TouchUpInside (object sender, EventArgs e)
		{
			_viewModel.CommentCommand.Execute (null);
		}

		void ShareButton_TouchUpInside (object sender, EventArgs e)
		{
			_viewModel.ShareCommand.Execute (null);
		}

		void LikeButton_TouchUpInside (object sender, EventArgs e)
		{
			_viewModel.LikeCommand.Execute (null);
		}

		#endregion
	}
}
