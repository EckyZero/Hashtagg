// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using Shared.Common;

namespace iOS.Phone
{
	public partial class DrBioSummaryCell : BaseRecommendationDetailCell
	{
		public static NSString Key = new NSString ("DrBioSummaryCell");
		private DoctorRecommendationDetailSummaryViewModel _viewModel;

		public DrBioSummaryCell (IntPtr handle) : base (handle)
		{
		}

		public override void AwakeFromNib ()
		{
			base.AwakeFromNib ();

			ReviewCountButton.TouchUpInside += OnReviewCountButtonTapped;
			ReviewButton.TouchUpInside += OnReviewButtonTapped;
		}

		public override void Configure (BaseRecommendationDetailListItemViewModel itemViewModel)
		{
			_viewModel = (DoctorRecommendationDetailSummaryViewModel)itemViewModel;

			ImageViewHeightConstraint.Constant = _viewModel.IsPremier ? 78 : 45;	
			MainImageView.Image = UIImage.FromBundle (_viewModel.ImageName);
			CostTitleLabel.Hidden = !_viewModel.ShowCost;
			CostValueLabel.Hidden = !_viewModel.ShowCost;
			CostValueLabel.Text = _viewModel.Cost;

			NameLabel.Text = _viewModel.Name;
			SpecialtyLabel.Text = _viewModel.Specialty;
			StarView.AddStarRatingControl (_viewModel.Rating);
			ReviewCountButton.SetTitle(_viewModel.Reviews, UIControlState.Normal);
			NetworkLabel.Text = _viewModel.Network;
			ExperienceLabel.Text = _viewModel.Experience;
			GenderLabel.Text = _viewModel.Gender;
			AvailabilityLabel.Text = _viewModel.Availability;

			if(_viewModel.ShowOnlyReviewPrompt)
			{
				StarViewWidthConstraint.Constant = 0;
				StarViewRightConstraint.Constant = 0;
				ReviewCountButtonWidthConstraint.Constant = 0;
				ReviewCountButtonRightConstraint.Constant = 0;
				ButtonSeperatorWidthConstraint.Constant = 0;
				ReviewButtonLeftConstraint.Constant = 0;
				ReviewButton.SetTitle (ApplicationResources.BeTheFirstToReview, UIControlState.Normal);
				ReviewButtonWidthConstraint.Constant = 170;
			}
		}

		private void OnReviewCountButtonTapped (object sender, EventArgs args)
		{
			_viewModel.ReviewCountCommand.Execute (null);
		}

		private void OnReviewButtonTapped (object sender, EventArgs args)
		{
			_viewModel.ReviewCommand.Execute (null);
		}
	}
}
