// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using Shared.Common;
using CoreGraphics;
using System.Collections.Generic;
using System.Linq;

namespace iOS.Phone
{
	public partial class SuperlativeCell : BaseRecommendationDetailCell
	{
		public static string Key = new NSString("SuperlativeCell");
		private bool _isFirstLoad = true;

		public SuperlativeCell (IntPtr handle) : base (handle)
		{
		}
			
		public override void Configure (BaseRecommendationDetailListItemViewModel itemViewModel)
		{
			// Since we're adding subviews at runtime, we want to make sure we don't add them more than once as the cells deqeue
			if (!_isFirstLoad)
				return;

			var viewModel = (DoctorRecommendationDetailSuperlativeViewModel)itemViewModel;
			var previousLabel = SuperlativeValueLabel;
			var previousImageView = SuperlativeImageView;
			var font = UIFont.FromName ("CenturyGothic-Bold", this.NetworkLabel.Font.PointSize);
			var range = new NSRange(0, viewModel.Insurance.IndexOf(ApplicationResources.Network) + 7);
			var text = new NSMutableAttributedString (viewModel.Insurance);

			text.SetAttributes (new UIStringAttributes () { Font = font }, range);

			if(!viewModel.ShowAccredited)
			{
				AccredationLabel.Text = String.Empty;
				AccredationBottomConstraint.Constant = 0;
			}

			// If there are no superlatives, collapse the label and imageView
			// Add a new bottom constraint
			if(viewModel.Superlatives.Count == 0)
			{
				SuperlativeValueLabel.Text = String.Empty;
				SuperlativeImageView.Hidden = true;

				NSLayoutConstraint bottomConstraint = NSLayoutConstraint.Create (SuperlativeValueLabel, NSLayoutAttribute.Bottom, NSLayoutRelation.Equal, this.ContentView, NSLayoutAttribute.Bottom, 1, -15);

				this.ContentView.AddConstraint (bottomConstraint);
				return;
			}

			NetworkLabel.AttributedText = text;	
			SuperlativeValueLabel.Text = viewModel.Superlatives [0].Description;
			SuperlativeValueLabel.Font = UIFont.FromName (viewModel.Superlatives [0].Type.StartsWith ("Neg") ? "CenturyGothic-Bold" : "CenturyGothic", SuperlativeValueLabel.Font.PointSize);
			SuperlativeValueLabel.TextColor = viewModel.Superlatives [0].Color.ToUIColor();
			SuperlativeImageView.Image = UIImage.FromFile (viewModel.Superlatives [0].ImageName);

			if(viewModel.Superlatives.Count == 1)
			{
				// special constraints for only 1 specialty constrained views
				NSLayoutConstraint bottomConstraint = NSLayoutConstraint.Create (SuperlativeValueLabel, NSLayoutAttribute.Bottom, NSLayoutRelation.Equal, this.ContentView, NSLayoutAttribute.Bottom, 1, -15);

				this.ContentView.AddConstraint (bottomConstraint);
				this.ContentView.SetNeedsLayout ();
				this.ContentView.LayoutIfNeeded ();
			}

			// Add constraints
			for (int i = 1; i < viewModel.Superlatives.Count; i++) 
			{
				var superlative = viewModel.Superlatives [i];
				var label = AddLabelAndConstraints (superlative, previousLabel, (i == viewModel.Superlatives.Count - 1));
				var imageView = AddImageViewAndConstraints (superlative, previousImageView, label);

				previousImageView = imageView;	
				previousLabel = label;

				_expandingLabels.Add (label);
			}
			this.ContentView.SetNeedsLayout ();
			this.ContentView.LayoutIfNeeded ();

			_isFirstLoad = false;
		}

		private UILabel AddLabelAndConstraints (Superlative superlative, UILabel previousLabel, bool isLastSuperlative)
		{
			var label = new UILabel ();

			// Set Properties
			label.Text = superlative.Description;
			label.Font = UIFont.FromName (superlative.Type.StartsWith ("Neg") ? "CenturyGothic-Bold" : "CenturyGothic", previousLabel.Font.PointSize);
			label.TextColor = superlative.Color.ToUIColor();
			label.Lines = previousLabel.Lines;
			label.LineBreakMode = previousLabel.LineBreakMode;
			label.TranslatesAutoresizingMaskIntoConstraints = false;

			// Add UILabel Constraints
			NSLayoutConstraint leftConstraint = NSLayoutConstraint.Create (label, NSLayoutAttribute.Left, NSLayoutRelation.Equal, previousLabel, NSLayoutAttribute.Left, 1, 0);
			NSLayoutConstraint topConstraint = NSLayoutConstraint.Create (label, NSLayoutAttribute.Top, NSLayoutRelation.Equal, previousLabel, NSLayoutAttribute.Bottom, 1, 8);
			NSLayoutConstraint rightConstraint = NSLayoutConstraint.Create (label, NSLayoutAttribute.Right, NSLayoutRelation.Equal, previousLabel, NSLayoutAttribute.Right, 1, 0);

			this.ContentView.AddSubview (label);
			this.ContentView.AddConstraint (leftConstraint);
			this.ContentView.AddConstraint (topConstraint);
			this.ContentView.AddConstraint (rightConstraint);

			if(isLastSuperlative)
			{
				NSLayoutConstraint bottomConstraint = NSLayoutConstraint.Create (label, NSLayoutAttribute.Bottom, NSLayoutRelation.Equal, this.ContentView, NSLayoutAttribute.Bottom, 1, -15);

				this.ContentView.AddConstraint (bottomConstraint);
			}
			return label;
		}

		private UIImageView AddImageViewAndConstraints (Superlative superlative, UIImageView previousImageView, UILabel referenceLabel)
		{
			var imageView = new UIImageView ();

			// Set Properties
			imageView.Image =  UIImage.FromFile (superlative.ImageName);
			imageView.ContentMode = previousImageView.ContentMode;
			imageView.TranslatesAutoresizingMaskIntoConstraints = false;

			// Add UIImageView Constraints
			NSLayoutConstraint leftConstraint = NSLayoutConstraint.Create (imageView, NSLayoutAttribute.Left, NSLayoutRelation.Equal, previousImageView, NSLayoutAttribute.Left, 1, 0);
			NSLayoutConstraint rightConstraint = NSLayoutConstraint.Create (imageView, NSLayoutAttribute.Right, NSLayoutRelation.Equal, previousImageView, NSLayoutAttribute.Right, 1, 0);
			NSLayoutConstraint heightConstraint = NSLayoutConstraint.Create (imageView, NSLayoutAttribute.Height, NSLayoutRelation.Equal, null, NSLayoutAttribute.NoAttribute, 1, 18);
			NSLayoutConstraint centerYConstraint = NSLayoutConstraint.Create (imageView, NSLayoutAttribute.CenterY, NSLayoutRelation.Equal, referenceLabel, NSLayoutAttribute.CenterY, 1, 0);

			this.ContentView.AddSubview (imageView);
			this.ContentView.AddConstraint (leftConstraint);
			this.ContentView.AddConstraint (rightConstraint);
			this.ContentView.AddConstraint (heightConstraint);
			this.ContentView.AddConstraint (centerYConstraint);

			return imageView;
		}
	}
}
