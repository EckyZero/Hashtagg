// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.Common;
using System.Linq;
using Shared.Common.Models.TuringTree;

namespace iOS.Phone
{
	public partial class SurveyCellThreeButton : BaseSurveyButtonCell
	{
		public static NSString Key = new NSString ("SurveyCellThreeButton");

		#region Methods

		public SurveyCellThreeButton (IntPtr handle) : base (handle) { }

		protected override void InitBindings ()
		{
			var leftAction = Section.SectionActions.ElementAt(0);
			var centerAction = Section.SectionActions.ElementAt (1);
			var rightAction = Section.SectionActions.ElementAt (2);

			LeftButton.SetTitle (leftAction.ActionLabel, UIControlState.Normal);
			CenterButton.SetTitle (centerAction.ActionLabel, UIControlState.Normal);
			RightButton.SetTitle (rightAction.ActionLabel, UIControlState.Normal);

			LeftButton.TouchUpInside -= OnLeftButtonTouchUpInside;
			CenterButton.TouchUpInside -= OnCenterButtonTouchUpInside;
			RightButton.TouchUpInside -= OnRightButtonTouchUpInside;

			LeftButton.TouchUpInside += OnLeftButtonTouchUpInside;
			CenterButton.TouchUpInside += OnCenterButtonTouchUpInside;
			RightButton.TouchUpInside += OnRightButtonTouchUpInside;

			SetButtonDefaultEnabledState (LeftButton, leftAction);
			SetButtonDefaultEnabledState (CenterButton, centerAction);
			SetButtonDefaultEnabledState (RightButton, rightAction);
		}		

		public override void OnCanExecute (bool canExecute, GenericAction action)
		{
			var index = Section.SectionActions.IndexOf (action);
			UIButton button = null;

			switch (index)
			{
			case 0:
				button = LeftButton;
				break;
			case 1:
				button = CenterButton;
				break;
			case 2:
				button = RightButton;
				break;
			}
			button.Enabled = canExecute;
		}

		#endregion
	}
}
