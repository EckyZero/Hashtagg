// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.Common;
using Shared.VM;
using System.ComponentModel;
using CoreGraphics;
using System.Collections.Generic;

namespace iOS.Phone
{
	public partial class IncentiveDetailTableController : ExtendedObservableTableViewController<IncentiveAction>
	{
		private IncentiveDetailViewModel _viewModel;

		public Incentive Incentive 
		{ 
			get { return _viewModel.Incentive; }
			set { _viewModel.Incentive = value; }
		}

		public IncentiveDetailTableController (IntPtr handle) : base (handle)
		{
			_viewModel = new IncentiveDetailViewModel ();
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			InitBindings ();
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			_viewModel.RefreshData (()=> {TableView.ReloadData();});
		}

		public override void ConfigureDelegates ()
		{
			this.TableView.RowHeight = 60;

			this.DataSource = _viewModel.IncentiveActions;

			this.CreateCellDelegate = (id, tableView, indexPath) => 
			{
				var cell = tableView.DequeueReusableCell(IncentiveDefaultCell.Key);

				return cell;
			};

			this.GetHeightForHeaderDelegate = (tableView, section) => 
			{
				var height = _viewModel.IncentiveActions.Count > 0 ? 1 : 0;

				return height;
			};

			this.BindCellDelegate = (UITableViewCell cell, IncentiveAction incentiveAction, NSIndexPath indexPath) => 
			{
				var aCell = (IncentiveDefaultCell)cell;

				aCell.Configure(incentiveAction, Incentive);
			};


			this.GetViewForHeaderDelegate = (tableView, section) =>
			{
				UIView view = null;

				if(_viewModel.IncentiveActions.Count > 0)
				{
					view = new UIView (new CGRect (0, 0, TableView.Frame.Width, 1));
					view.BackgroundColor = SharedColors.LightGreen.ToUIColor ();
				}

				return view;
			};

			this.SelectionChanged += (object sender, EventArgs e) => 
			{
				_viewModel.IncentiveActionCommand.Execute (this.SelectedItem);
			};
		}

		private void InitBindings ()
		{
			nfloat customOffset = 0; 

			Title = _viewModel.Incentive.Name;

			AvailableAmountLabel.Text = _viewModel.AvailableAmount.ToString();
			AvailableAmountDetailLabel.Text = _viewModel.AvailableAmountDetail;

			EarnedAmountLabel.Text = _viewModel.EarnedAmount.ToString ();

			AboutDetailLabel.Text = _viewModel.AboutText;
			RewardDetailLabel.Text = _viewModel.RewardText;

			if(_viewModel.RewardType == IncentiveRewardType.HealthPoints)
			{
				AvailableDollarSignLabel.Hidden = true;
				EarnedDollarSignLabel.Hidden = true;
			}
//			if(_viewModel.Incentive.IsRequired == false)
//			{
//				customOffset -= RewardViewHeightConstraint.Constant + RewardViewTopConstraint.Constant;
//
//				RewardViewHeightConstraint.Constant = 0;
//				RewardViewTopConstraint.Constant = 0;
//
//				RewardView.SetNeedsLayout ();
//				RewardView.LayoutIfNeeded ();
//			}

//			TableView.SizeHeaderToFitTextView (AboutDetailTextView, true);
			TableView.SizeHeaderToFitLabels (new List<UILabel> () { RewardDetailLabel, AboutDetailLabel}, true);

			_viewModel.RequestIncentiveActionDetailPage += OnRequestIncentiveActionDetailPage;
		}

		private void OnRequestIncentiveActionDetailPage(object sender, IncentiveAction incentiveAction)
		{
			var storyboard = UIStoryboard.FromName ("IncentiveStoryboard", null);
			var controller = storyboard.InstantiateViewController ("IncentivesActionDetail") as IncentivesActionDetail;


			controller.IncentiveAction = incentiveAction;
			NavigationController.PushViewController (controller, true);
		}
	}
}
