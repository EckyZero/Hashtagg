// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using GalaSoft.MvvmLight.Helpers;
using Shared.Common;
using System.Threading.Tasks;

namespace iOS.Phone
{
	public partial class DependentInformationTableController : UITableViewController
	{
		private bool _isKeyboardShowing = false;

		public DependentInformationTableController (IntPtr handle) : base (handle) { }

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			PopulateStaticData ();

			InitBindings ();

			var cancelButton = new UIBarButtonItem (ApplicationResources.Cancel, UIBarButtonItemStyle.Plain, OnCancelButtonTapped);

			NavigationItem.SetRightBarButtonItem (cancelButton, false);
			AddButton.SetBackgroundImage (SharedColors.Gray3.ToUIColor().ToImage (AddButton.Bounds), UIControlState.Disabled);
			AddButton.SetBackgroundImage (SharedColors.Orange.ToUIColor().ToImage (AddButton.Bounds), UIControlState.Normal);

			TableView.RowHeight = 60;
			AddButton.Enabled = false;
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			NSNotificationCenter.DefaultCenter.AddObserver (UIKeyboard.DidShowNotification, KeyboardDidShow);
			NSNotificationCenter.DefaultCenter.AddObserver (UIKeyboard.WillHideNotification, KeyboardWillHide);
		}

		public override void ViewWillDisappear (bool animated)
		{
			base.ViewWillDisappear (animated);

			NSNotificationCenter.DefaultCenter.RemoveObserver (this);
		}

		private void KeyboardDidShow(NSNotification notification)
		{
			_isKeyboardShowing = true;
		}

		private void KeyboardWillHide(NSNotification notification)
		{
			_isKeyboardShowing = false;
		}

		private void OnCanExecute (object sender, EventArgs args)
		{
			var canExecuteArgs = (CanExecuteEventArgs)args;
			AddButton.Enabled = canExecuteArgs.CanExecute;
			System.Diagnostics.Debug.WriteLine (canExecuteArgs.CanExecute);
		}

		private async void OnEditingDidBegin (object sender, EventArgs args)
		{
			var control = (PSFloatingTextControl)sender;
			var tag = control.Tag;
			var rowCount = TableView.NumberOfRowsInSection (0);
			var nextRow = tag + 1 <= rowCount - 1 ? tag + 1 : rowCount - 1;
			var indexPath = NSIndexPath.FromRowSection (nextRow, 0);

			if(!_isKeyboardShowing)
			{
				await Task.Delay (700);
			}

			TableView.ScrollToRow (indexPath, UITableViewScrollPosition.None, true);
		}

		private void PopulateStaticData ()
		{
			FirstNameControl.PlaceholderText = Application.VMStore.DependentInformationVM.FirstNamePlaceholder;
			FirstNameControl.EditingDidBegin += OnEditingDidBegin;
			FirstNameControl.MaxCharacterCount = Application.VMStore.DependentInformationVM.MaxNameCount;

			LastNameControl.PlaceholderText = Application.VMStore.DependentInformationVM.LastNamePlaceholder;
			LastNameControl.EditingDidBegin += OnEditingDidBegin;
			LastNameControl.MaxCharacterCount = Application.VMStore.DependentInformationVM.MaxNameCount;

			EmailControl.PlaceholderText = Application.VMStore.DependentInformationVM.EmailPlaceholder;
			EmailControl.KeyboardType = UIKeyboardType.EmailAddress;
			EmailControl.EditingDidBegin += OnEditingDidBegin;
			EmailControl.MaxCharacterCount = Application.VMStore.DependentInformationVM.MaxEmailCount;

			BirthDateControl.PlaceholderText = Application.VMStore.DependentInformationVM.BirthdatePlaceholder;
			BirthDateControl.DateMax = Application.VMStore.DependentInformationVM.MaxBirthDate.ToNSDate ();
			BirthDateControl.DetailDisclosureHidden = false;
			BirthDateControl.EditingDidBegin += OnEditingDidBegin;

			Last4SSNControl.PlaceholderText = Application.VMStore.DependentInformationVM.LastFourSocialPlaceholder;
			Last4SSNControl.KeyboardType = UIKeyboardType.NumberPad;
			Last4SSNControl.SecureTextEntry = true;
			Last4SSNControl.MaxCharacterCount = Application.VMStore.DependentInformationVM.LengthSocial;
			Last4SSNControl.DetailDisclosureHidden = false;
			Last4SSNControl.EditingDidBegin += OnEditingDidBegin;

			GenderControl.PlaceholderText = Application.VMStore.DependentInformationVM.GenderPlaceholder;
			GenderControl.PickerOptions = Application.VMStore.DependentInformationVM.GenderData;
			GenderControl.EditingDidBegin += OnEditingDidBegin;

			RelationshipControl.PlaceholderText = Application.VMStore.DependentInformationVM.RelationshipPlaceholder;
			RelationshipControl.PickerOptions = Application.VMStore.DependentInformationVM.RelationshipData;
			RelationshipControl.EditingDidBegin += OnEditingDidBegin;

			InviteSwitch.On =  Application.VMStore.DependentInformationVM.SendInvitePlaceholder;
			DecisionMakerSwitch.On = Application.VMStore.DependentInformationVM.PrimaryDecisionPlaceholder;

			Application.VMStore.DependentInformationVM.CanExecute += OnCanExecute;
		}

		private void InitBindings ()
		{
			this.SetBinding (
				() => FirstNameControl.Text,
				() => Application.VMStore.DependentInformationVM.FirstName
			).UpdateSourceTrigger ("TextChanged");

			this.SetBinding (
				() => LastNameControl.Text,
				() => Application.VMStore.DependentInformationVM.LastName
			).UpdateSourceTrigger ("TextChanged");

			this.SetBinding (
				() => EmailControl.Text,
				() => Application.VMStore.DependentInformationVM.Email
			).UpdateSourceTrigger ("TextChanged");

			this.SetBinding (
				() => BirthDateControl.Text,
				() => Application.VMStore.DependentInformationVM.Birthdate
			).UpdateSourceTrigger ("TextChanged");

			this.SetBinding (
				() => Last4SSNControl.Text,
				() => Application.VMStore.DependentInformationVM.Social
			).UpdateSourceTrigger ("TextChanged");

			this.SetBinding (
				() => GenderControl.Text,
				() => Application.VMStore.DependentInformationVM.Gender
			).UpdateSourceTrigger ("TextChanged");

			this.SetBinding (
				() => RelationshipControl.Text,
				() => Application.VMStore.DependentInformationVM.Relationship
			).UpdateSourceTrigger ("TextChanged");
				
			this.SetBinding (
				() => InviteSwitch.On,
				() => Application.VMStore.DependentInformationVM.Invite
			).UpdateSourceTrigger ("TouchUpInside");


			this.SetBinding (
				() => DecisionMakerSwitch.On,
				() => Application.VMStore.DependentInformationVM.DecisionMaker
			).UpdateSourceTrigger ("TouchUpInside");
//			this.SetBinding (
//				() = > InviteSwitch,
//				() => Application.VMStore.DependentInformationVM.Invite
//			).UpdateSourceTrigger ("ValueChanged");


			BirthDateControl.SetCommand ("DetailTapped", Application.VMStore.DependentInformationVM.BirthDateCommand);
			Last4SSNControl.SetCommand ("DetailTapped", Application.VMStore.DependentInformationVM.SSNCommand);
			AddButton.SetCommand("TouchUpInside", Application.VMStore.DependentInformationVM.AddCommand);
			CancelButton.SetCommand("TouchUpInside", Application.VMStore.DependentInformationVM.CancelCommand);

			AddButton.SetTitle(Application.VMStore.DependentInformationVM.AddButtonText,UIControlState.Normal);

			FirstNameControl.Text = Application.VMStore.DependentInformationVM.FirstName;

			LastNameControl.Text = Application.VMStore.DependentInformationVM.LastName;

			EmailControl.Text = Application.VMStore.DependentInformationVM.Email;

			BirthDateControl.Text = Application.VMStore.DependentInformationVM.Birthdate;

			Last4SSNControl.Text = Application.VMStore.DependentInformationVM.Social;

			GenderControl.Text = Application.VMStore.DependentInformationVM.Gender;

			RelationshipControl.Text = Application.VMStore.DependentInformationVM.Relationship;

			InviteSwitch.On = Application.VMStore.DependentInformationVM.Invite;
				
			DecisionMakerSwitch.On = Application.VMStore.DependentInformationVM.DecisionMaker;
		}

		private void OnCancelButtonTapped (object sender, EventArgs args)
		{
			Application.VMStore.DependentInformationVM.BackCommand.Execute (args);
		}
	}
}
