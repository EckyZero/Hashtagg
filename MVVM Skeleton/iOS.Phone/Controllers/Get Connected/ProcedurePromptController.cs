// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using Shared.Common;
using Microsoft.Practices.Unity;
using GalaSoft.MvvmLight.Helpers;
using Shared.BL;

namespace iOS.Phone
{
	public partial class ProcedurePromptController : UIViewController
	{
		private IProcedurePromptViewModel _viewModel;

		public ProcedurePromptController (IntPtr handle) : base (handle)
		{
			_viewModel = IocContainer.GetContainer().Resolve<IProcedurePromptViewModel> ();
			Application.VMStore.ProcedurePromptVM = _viewModel;
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			InitBindings ();

			PromptButton.Text = Application.VMStore.ProcedurePromptVM.Placeholder;
		}

		public override async void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			bool shouldAppear = await Application.VMStore.ProcedurePromptVM.ViewShouldAppear ();

			if (!shouldAppear)
			{
				var storyboard = UIStoryboard.FromName ("MainStoryboard", null);
				var controller = storyboard.InstantiateViewController ("ProcedurePromptListController") as ProcedurePromptListController;

				NavigationController.PushViewController (controller, false);
			}
		}

		private void InitBindings ()
		{
			PromptButton.SetCommand ("Clicked", Application.VMStore.ProcedurePromptVM.ProcedurePromptCommand);

			NotRightNowButton.SetCommand ("TouchUpInside", Application.VMStore.ProcedurePromptVM.NotRightNowCommand);

			SkipButton.SetCommand ("TouchUpInside", Application.VMStore.ProcedurePromptVM.SkipCommand);

			ProgressView.Progress = Application.VMStore.ProcedurePromptVM.Progress;
		}
	}
}
