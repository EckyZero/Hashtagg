// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using Shared.Common;
using GalaSoft.MvvmLight.Helpers;

namespace iOS.Phone
{
	public partial class GenericTableController : UITableViewController
	{
		BaseListViewModel _viewModel;

		public GenericTableController (IntPtr handle) : base (handle)
		{
		}

		public static GenericTableController Create (BaseListViewModel viewModel, BaseTableController containerController)
		{
			var storyboard = UIStoryboard.FromName ("HealthDetailsStoryboard", null);
			var childController = storyboard.InstantiateViewController ("GenericTableController") as GenericTableController;
		
			childController._viewModel = viewModel;

			containerController.View.AddSubview (childController.TableView);
			containerController.AddChildViewController (childController);

			childController.TableView.Source = containerController.InitDataSource(viewModel, childController);
			childController.TableView.SizeHeaderToFitLabel (childController.HeaderLabel);

			containerController.View.SetNeedsLayout ();
			containerController.View.LayoutIfNeeded ();

			return childController;
		}

		public override async void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			await _viewModel.DidLoad();

			HeaderLabel.Text = _viewModel.Header;
			FooterButton.SetTitle (_viewModel.NextButtonTitle, UIControlState.Normal);
			FooterButton.SetCommand ("TouchUpInside", _viewModel.NextCommand);

			if(String.IsNullOrWhiteSpace(_viewModel.NextButtonTitle))
			{
				FooterButton.Hidden = true;
				var frame = TableView.TableFooterView.Frame;
				frame.Height = 0;

				TableView.TableFooterView.Frame = frame;
			}

			_viewModel.RequestRefreshPage += OnRequestRefreshPage;
			_viewModel.RequestPreviousPage += OnRequestPreviousPage;
		}

		public override async void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			await _viewModel.WillAppear ();

			TableView.ScrollToBottom (true);
		}

		public override async void ViewWillDisappear (bool animated)
		{
			base.ViewWillDisappear (animated);

			await _viewModel.WillDisappear ();
		}

		public void OnRequestRefreshPage (object sender, EventArgs args)
		{
			TableView.ReloadData ();
		}

		public void OnRequestPreviousPage (object sender, EventArgs args)
		{
			ParentViewController.NavigationController.PopViewController (true);
		}
	}
}
