// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using Shared.Common;
using System.ComponentModel;
using GalaSoft.MvvmLight.Helpers;

namespace iOS.Phone
{
	public partial class GenericCalendarPromptController : UIViewController
	{
		protected UIBarButtonItem SubmitBarButtonItem { get; set;}
		public CalendarParameters Parameters { get; set; }

		public UIImage Image
		{
			get { return ImageView.Image; }
			set { ImageView.Image = value; }
		}

		protected GenericCalendarPromptController (IntPtr handle) : base (handle) {}

		public static GenericCalendarPromptController Create<T>(BaseCalendarPromptViewModel<T> viewModel, BaseCalendarPromptController containerController)
		{
			var storyboard = UIStoryboard.FromName ("IncentiveStoryboard", null);
			var childController = storyboard.InstantiateViewController ("GenericCalendarPromptController") as GenericCalendarPromptController;

			// Step 1: Set ViewModel Events
			viewModel.RequestChangePage += containerController.OnRequestChangePage;
			viewModel.RequestNextPage += containerController.OnRequestNextPage;
			viewModel.RequestPreviousPage += childController.OnRequestPreviousPage;
			viewModel.CanExecute += childController.OnNextButtonCanExecute;
			viewModel.RequestCalendarPage += childController.OnRequestCalendarPage;

			viewModel.PropertyChanged += (object sender, PropertyChangedEventArgs e) => 
			{
				if (e.PropertyName.Equals("Model"))
				{
					childController.ContentHeaderLabel.Text = viewModel.ContentHeader;
					childController.ContentBodyLabel.Text = viewModel.ContentBody;
					childController.ContentFooterLabel.Text = viewModel.ContentFooter;
				}
				else if (e.PropertyName.Equals("CalendarDate"))
				{
					childController.DateButton.SetTitle(viewModel.CalendarDate.Value.ToString("D"), UIControlState.Normal);
				}
			};

			// Step 2: Setup ContainerController
			childController.SubmitBarButtonItem = new UIBarButtonItem (ApplicationResources.Submit, UIBarButtonItemStyle.Done, null);

			childController.SubmitBarButtonItem.ConfigureToCompassDefaults ();
			childController.SubmitBarButtonItem.SetCommand ("Clicked", viewModel.NextCommand);
			containerController.NavigationItem.SetRightBarButtonItem (childController.SubmitBarButtonItem, true);

			containerController.Title = viewModel.Title;

			containerController.View.AddSubview (childController.View);
			containerController.AddChildViewController (childController);

			containerController.View.SetNeedsLayout ();
			containerController.View.LayoutIfNeeded ();

			// Step 3: Setup Child Controller
			childController.Title = viewModel.Title;
			childController.TitleLabel.Text = viewModel.ContentTitle;
			childController.ContentHeaderLabel.Text = viewModel.ContentHeader;
			childController.ContentBodyLabel.Text = viewModel.ContentBody;
			childController.ContentFooterLabel.Text = viewModel.ContentFooter;

			childController.CancelButton.SetCommand ("TouchUpInside", viewModel.CancelCommand);
			childController.ChangeButton.SetCommand ("TouchUpInside", viewModel.ChangeCommand);
			childController.SubmitButton.SetCommand ("TouchUpInside", viewModel.NextCommand);
			childController.DateButton.SetCommand ("TouchUpInside", viewModel.CalendarCommand);

			if(String.IsNullOrWhiteSpace(viewModel.Subtitle))
			{
				childController.SubtitleLabelTopConstraint.Constant = 0;
			}
			if(!viewModel.ShowCalendar)
			{
				childController.CalendarViewHeightConstraint.Constant = 0;
			}

			childController.Parameters = viewModel.Parameters;

			return childController;
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			SubmitButton.Enabled = false;
			SubmitBarButtonItem.Enabled = false;

			SubmitButton.SetBackgroundImage (SharedColors.Gray3.ToUIColor().ToImage (SubmitButton.Bounds), UIControlState.Disabled);
			SubmitButton.SetBackgroundImage (SharedColors.Orange.ToUIColor().ToImage (SubmitButton.Bounds), UIControlState.Normal);
			SubmitButton.ClipsToBounds = true;
		}

		protected virtual void OnRequestCalendarPage (object sender, EventArgs args)
		{
			var storyboard = UIStoryboard.FromName ("MainStoryboard", null);
			var controller = storyboard.InstantiateViewController("CalendarController") as CalendarController;

			controller.Parameters = Parameters;

			ParentViewController.NavigationController.PushViewController (controller, true);
		}

		public virtual void OnRequestPreviousPage (object sender, EventArgs args)
		{
			ParentViewController.NavigationController.PopViewController (true);
		}

		protected virtual void OnNextButtonCanExecute (object sender, CanExecuteEventArgs args)
		{
			SubmitButton.Enabled = args.CanExecute;
			SubmitBarButtonItem.Enabled = args.CanExecute;
		}
	}
}
