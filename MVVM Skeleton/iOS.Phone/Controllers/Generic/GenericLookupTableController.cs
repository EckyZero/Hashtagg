// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.Common;
using Shared.VM;

namespace iOS.Phone
{
	public class GenericLookupDelegates<T>
	{
		public Action<UITableViewCell, T, NSIndexPath> BindCellDelegate { get; set; }
		public Func<NSString, UITableView, NSIndexPath, UITableViewCell> CreateCellDelegate { get; set; }

		public Func<UITableView, int, UIView> GetViewForHeaderDelegate { get; set; }
		public Func<UITableView, int, float> GetHeightForHeaderDelegate { get; set; }
		public Func<UITableView, int, UIView> GetViewForFooterDelegate { get; set; }
		public Func<UITableView, int, float> GetHeightForFooterDelegate{ get; set; }
		public Func<UITableView, NSIndexPath, float> GetHeightForRowDelegate { get; set; }
	}
 
	public partial class GenericLookupTableController : ExtendedObservableTableViewController<IIdentifiable>
	{		
		bool _isFirstLoad = true;
		GenericLookupController _parentController;

		public GenericLookupDelegates<IIdentifiable> Delegates { get; set;}

		public GenericLookupTableController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			if(_isFirstLoad)
			{
				_parentController = ParentViewController as GenericLookupController;

				_parentController.OnInitDelegates ();

				this.BindCellDelegate = Delegates.BindCellDelegate;

				this.CreateCellDelegate = Delegates.CreateCellDelegate;

				this.GetHeightForFooterDelegate = Delegates.GetHeightForFooterDelegate;

				this.GetHeightForHeaderDelegate = Delegates.GetHeightForFooterDelegate;

				this.GetViewForFooterDelegate = Delegates.GetViewForFooterDelegate;

				this.GetViewForHeaderDelegate = Delegates.GetViewForHeaderDelegate;

				this.GetHeightForRowDelegate = Delegates.GetHeightForRowDelegate;

				_isFirstLoad = false;
			}
		}

		public void StartAnimating ()
		{
			ActivityIndicator.StartAnimating ();
		}

		public void StopAnimating ()
		{
			ActivityIndicator.StopAnimating ();
		}

		public override void ConfigureDelegates () { }
	}
}
