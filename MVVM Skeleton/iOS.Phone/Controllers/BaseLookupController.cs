// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Shared.VM;
using Shared.Common;
using GalaSoft.MvvmLight.Helpers;

namespace iOS.Phone
{
	public abstract class BaseLookupController<T> : UIViewController where T : IIdentifiable
	{
		public Action<T> OnSelect
		{ 
			get { return ViewModel.OnSelect; } 
			set { ViewModel.OnSelect = value; } 
		}
		public Action<T> OnSelectAndReturn
		{ 
			get { return ViewModel.OnSelectAndReturn; } 
			set { ViewModel.OnSelectAndReturn = value; } 
		}

		public UISearchBar SearchBar { get; private set; }
		protected ILookupViewModel<T> ViewModel { get; set; }

		public abstract void InitViewModel();

		protected BaseLookupController(IntPtr handle) : base(handle) 
		{
			SearchBar = new UISearchBar ();
			InitViewModel ();
		}

		protected BaseLookupController() : base ()
		{
			SearchBar = new UISearchBar ();
			InitViewModel ();
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			var buttonAttributes = new UITextAttributes () {
				Font = UIFont.FromName ("Futura-Book", 14),
				TextColor = SharedColors.White.ToUIColor(),
			};

			UIBarButtonItem.UIBarButtonItemAppearance buttonAppearance =  UIBarButtonItem.AppearanceWhenContainedIn (typeof(UISearchBar));
			buttonAppearance.SetTitleTextAttributes (buttonAttributes, UIControlState.Normal);

			SearchBar.ShowsCancelButton = true;
			SearchBar.TintColor = SharedColors.CompassBlue.ToUIColor ();
			SearchBar.BackgroundColor = SharedColors.CompassBlue.ToUIColor ();
			SearchBar.Placeholder = ViewModel.Placeholder;

			SearchBar.CancelButtonClicked += (object sender, EventArgs e) => {
				ViewModel.CancelCommand.Execute(null);
			};

			SearchBar.TextChanged += (object sender, UISearchBarTextChangedEventArgs e) => {
				ViewModel.SearchCommand.Execute(SearchBar.Text);
			};

			SearchBar.SearchButtonClicked += (object sender, EventArgs e) => {
				if(SearchBar.IsFirstResponder){
					SearchBar.ResignFirstResponder();
				}

				ViewModel.SearchCommand.Execute(SearchBar.Text);
			};

			NavigationItem.TitleView = SearchBar;
			NavigationController.ConfigureToCompassDefaults (false);
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			SearchBar.BecomeFirstResponder ();
		}

		protected void InitBindings ()
		{
			this.SetCommand ("SelectionChanged", ViewModel.SelectionCommand);
		}

		public virtual void InitDelegates ()
		{
			
		}
	}
}
